<template>
  <div class="page" data-name="login">
    <div class="page-content">
      <form id="loginForm" class="list no-hairlines-md">
        <ul>
          <li class="item-content item-input">
            <div class="item-inner">
              <div class="item-title item-label">Username</div>
              <div class="item-input-wrap">
                <input type="text" name="username" required />
              </div>
            </div>
          </li>
          <li class="item-content item-input">
            <div class="item-inner">
              <div class="item-title item-label">Password</div>
              <div class="item-input-wrap">
                <input type="password" name="password" required />
              </div>
            </div>
          </li>
          <li class="item-content item-input">
            <div class="item-inner">
              <div class="item-title item-label">Server</div>
              <div class="item-input-wrap">
                <input type="text" name="server" required />
              </div>
            </div>
          </li>
        </ul>
        <div class="block">
          <button class="button button-fill" type="submit">Login</button>
        </div>
      </form>
      <div class="block">
        <p>Don‚Äôt have an account? <a href="/register">Register!</a></p>
      </div>
      <div class="block" id="loginStatus"></div>
      <div class="block pwa-instructions">
        <p><b>Install this app:</b></p>
        <p>
          üì± <b>Android</b>: Tap the <b>‚ãÆ</b> menu in Chrome and choose<br />
          <b>"Add to Home screen"</b>
        </p>
        <p>
          üçé <b>iOS</b>: Tap the <b>Share</b> icon (<i class="icon f7-icons"
            >square_arrow_up</i
          >) in Safari<br />
          and tap <b>"Add to Home Screen"</b>
        </p>
      </div>
    </div>
  </div>
</template>

<script>
  import store from "../js/store.js";

  export default (props, { $onMounted }) => {
    $onMounted(() => {
      const form = document.getElementById("loginForm");
      const status = document.getElementById("loginStatus");
      const serverField = form.querySelector("input[name='server']");
      serverField.value = store.state.server;

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        status.innerText = "Logging in...";
        const formData = new FormData(form);
        const server = formData.get("server");

        store.dispatch("setServer", server);

        try {
          const res = await fetch(`${server}/login`, {
            method: "POST",
            body: formData,
          });
          if (!res.ok) throw new Error("Login failed");
          const data = await res.json();
          store.dispatch("setAuth", {
            token: data.access_token,
            username: formData.get("username"),
          });
          window.location.href = "/";
        } catch (err) {
          status.innerText = `‚ùå ${err.message}`;
        }
      });
    });

    return $render;
  };
</script>

<style>
  .pwa-instructions {
    font-size: 13px;
    color: #888;
    text-align: center;
    line-height: 1.6;
    padding: 0 16px;
  }
</style>
