<template>
  <div class="page">
    <div class="navbar">
      <div class="navbar-inner">
        <div class="title">Settings</div>
      </div>
    </div>

    <div class="page-content">
      <div class="block text-align-center">
        <h2 style="margin-bottom: 1rem">Profile Picture</h2>
        <img
          id="currentAvatar"
          src="/img/default-pfp.png"
          style="
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
          "
        />

        <form
          id="avatarForm"
          class="list no-hairlines-md"
          style="margin-top: 1.5rem"
        >
          <ul>
            <li class="item-content item-input">
              <div class="item-inner">
                <div class="item-input-wrap">
                  <input
                    type="file"
                    name="file"
                    accept="image/*"
                    required
                    style="padding: 0.75rem"
                  />
                </div>
              </div>
            </li>
          </ul>
          <div class="block">
            <button class="button button-fill color-primary" type="submit">
              Upload New Avatar
            </button>
          </div>
        </form>

        <div
          id="avatarStatus"
          class="block text-align-center text-color-gray"
        ></div>

        <!-- Logout Button -->
        <div class="block" style="margin-top: 2rem">
          <button
            id="logoutSettingsBtn"
            class="button button-outline color-red"
          >
            Logout
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import store from "../js/store.js";

  export default (props, { $f7, $onMounted }) => {
    $onMounted(() => {
      const token = store.state.token;
      const server = store.state.server;

      if (!token) {
        $f7.views.main.router.navigate("/login");
        return;
      }

      fetch(`${server}/me`, {
        headers: { Authorization: `Bearer ${token}` },
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.avatar) {
            fetch(`${server}/avatar/${data.avatar}`, {
              headers: { Authorization: `Bearer ${token}` },
            })
              .then((res) => (res.ok ? res.blob() : null))
              .then((blob) => {
                if (blob) {
                  const url = URL.createObjectURL(blob);
                  document.getElementById("currentAvatar").src = url;
                }
              });
          }
        });

      document
        .getElementById("avatarForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const status = document.getElementById("avatarStatus");
          status.innerText = "Uploading...";
          const formData = new FormData(e.target);

          try {
            const res = await fetch(`${server}/me/avatar`, {
              method: "POST",
              headers: { Authorization: `Bearer ${token}` },
              body: formData,
            });
            const data = await res.json();
            if (data.avatar) {
              const avatarRes = await fetch(`${server}/avatar/${data.avatar}`, {
                headers: { Authorization: `Bearer ${token}` },
              });
              if (avatarRes.ok) {
                const blob = await avatarRes.blob();
                const url = URL.createObjectURL(blob);
                document.getElementById("currentAvatar").src = url;
                status.innerText = "✅ Updated!";
              } else {
                status.innerText = "✅ Saved, but failed to reload";
              }
            } else {
              status.innerText = "❌ Upload failed";
            }
          } catch (err) {
            status.innerText = "❌ Upload failed";
          }
        });

      // 🔴 Logout Handler
      document
        .getElementById("logoutSettingsBtn")
        .addEventListener("click", () => {
          store.dispatch("clearAuth");
          $f7.views.main.router.navigate("/login");
        });
    });

    return $render;
  };
</script>
